{"ast":null,"code":"var _jsxFileName = \"/home/bea/Documents/bea/jamm/spotify/src/App.js\";\nimport React from 'react';\nimport SearchBar from './Components/SearchBar/SearchBar';\nimport SearchResults from './Components/SearchResults/SearchResults';\nimport Playlist from './Components/Playlist/Playlist';\nimport Spotify from './util/Spotify';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'baobao-playlist',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  } // Adds track from Search Results to Playlist\n\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks; // if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n    //  return;\n    //  this.setState(prevState => ({\n    //   playlistTracks: [...prevState.playlistTracks, track]\n    // }));\n    //  }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  } // Removes track from Playlist by filtering out track id from playlistTracks\n\n\n  removeTrack(track) {\n    // this.setState({\n    //   playlistTracks: this.state.playlistTracks.filter(playlistTrack => playlistTrack.id !== track.id)\n    // });\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTracks => currentTracks.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  } // Updates the name of the Playlist\n\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  } // Saves playlist name and tracks to user's account\n\n\n  savePlaylist() {\n    const trackURIs = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlayList(this.state.playlistName, trackURIs).then(() => {\n      this.setState({\n        playlistName: 'New PlayList',\n        playlistTracks: []\n      });\n    });\n  } // Sends search term request to spotify and returns results of search in the search results panel\n\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistName: this.state.playlistName,\n            playlistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bea/Documents/bea/jamm/spotify/src/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","name","setState","track","tracks","push","filter","currentTracks","id","trackURIs","map","uri","savePlayList","then","term","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SearchBar from './Components/SearchBar/SearchBar'\nimport SearchResults from './Components/SearchResults/SearchResults'\nimport Playlist from './Components/Playlist/Playlist'\nimport Spotify from './util/Spotify'\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      searchResults: [],\n      playlistName: 'baobao-playlist',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  // Adds track from Search Results to Playlist\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    // if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n    //  return;\n    //  this.setState(prevState => ({\n    //   playlistTracks: [...prevState.playlistTracks, track]\n    // }));\n  //  }\n   tracks.push(track);\n   this.setState({playlistTracks: tracks})\n }\n\n // Removes track from Playlist by filtering out track id from playlistTracks\n removeTrack(track){ \n  // this.setState({\n  //   playlistTracks: this.state.playlistTracks.filter(playlistTrack => playlistTrack.id !== track.id)\n  // });\n let tracks = this.state.playlistTracks;\n tracks = tracks.filter(currentTracks => currentTracks.id !== track.id)\n this.setState({\n   playlistTracks:tracks\n })   \n }\n\n // Updates the name of the Playlist\n updatePlaylistName(name){\n     this.setState({\n      playlistName:name\n    })  \n }\n\n  // Saves playlist name and tracks to user's account\n savePlaylist(){\n   const trackURIs = this.state.playlistTracks.map(track=>track.uri)\n   Spotify.savePlayList(this.state.playlistName,trackURIs).then(()=>{\n     this.setState({\n      playlistName:'New PlayList',\n      playlistTracks: []\n     })\n   })\n }\n\n // Sends search term request to spotify and returns results of search in the search results panel\n search(term){\n    Spotify.search(term).then(searchResults=>{\n      this.setState({searchResults: searchResults})\n    }) \n  }\n\n\n  render(){\n\n\n    return (\n      <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n       <SearchBar \n           onSearch={this.search}/>\n        <div className=\"App-playlist\">\n          <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack}/>\n          <Playlist \n              playlistName={this.state.playlistName} \n              playlistTracks={this.state.playlistTracks}\n              onRemove= {this.removeTrack}\n              onNameChange = {this.updatePlaylistName}\n              onSave={this.savePlaylist}\n              /> \n        </div>\n      </div>\n    </div>\n  );\n\n  }\n  }\n  \n  export default App;\n  "]},"metadata":{},"sourceType":"module"}